import db
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton

replic_admin_menu = '–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
replic_edit_info = "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ++ –û–ø–∏—Å–∞–Ω–∏–µ"
replic_edit_error = '–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ'
replic_edit_answer_phrase = '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç'

async def replic_get_informations():
    data = await db.info.get_informations()
    keyboard = []
    for i in range(len(data)):
        keyboard.append([InlineKeyboardButton(text=f'{i + 1}', callback_data=f'admin.editor.{i}')])
    keyboard.append([InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å', callback_data='admin.editor.add')])
    keyboard.append([InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='admin.menu.main')])
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    text = '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
    return text, markup

async def replic_edit_information(array_id):
    data = await db.info.get_informations()
    keyboard = []
    item_data = data[array_id]
    btn_edit = InlineKeyboardButton(text='‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'admin.edit.{array_id}')
    btn_delete = InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å', callback_data=f'admin.delete.{array_id}')
    btn_back = InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data=f'admin.editor.{array_id - 1}')
    btn_next = InlineKeyboardButton(text='‚û°Ô∏è', callback_data=f'admin.editor.{array_id + 1}')
    btn_add = InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å', callback_data='admin.editor.add')
    btn_to_menu = InlineKeyboardButton(text='Ô∏èüö™ –ù–∞–∑–∞–¥', callback_data='admin.editor.menu')
    if array_id == 0 and len(data) > 1:
        keyboard.append([btn_edit, btn_next])
    elif array_id == 0 and len(data) == 1:
        keyboard.append([btn_edit, btn_add])
    elif array_id == len(data) - 1:
        keyboard.append([btn_back, btn_edit, btn_add])
    else:
        keyboard.append([btn_back, btn_edit, btn_next])
    keyboard.append([btn_delete])
    keyboard.append([btn_to_menu])
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    text = f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è {array_id}\n{item_data["info"]}\n\n{item_data["description"]}'
    return text, markup

async def replic_edit_answer(first_text, new_text, user_id):
    text = first_text + "–í–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞:\n" + new_text
    btn_edit = InlineKeyboardButton(text='‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'admin.eq.{user_id}')
    btn_answer = InlineKeyboardButton(text='‚¨ÖÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f'admin.aq.{user_id}')
    markup = InlineKeyboardMarkup(inline_keyboard=[[btn_edit], [btn_answer]])
    return text, markup

